var util = require('util')
var event = require('events')

var mongodb = require('mongodb')

var Db = mongodb.Db
var Server = mongodb.Server;

var Mongo = module.exports = function(host, port, db) {
	this.host = host;
	this.port = port;
	this.db = db;
	this.client;
	this.server;
	this.isOpen = false;
};
Mongo.prototype.client = function(options) {

	this.client = new mongodb.Db(this.db, this.server = new mongodb.Server(this.host, this.port, options || {}))
};
Mongo.prototype.newCollection = function(nameSpaces, callBacks) {
	if (nameSpaces.length === callBacks.length) {

		this.client()
		var self = this;
		this.open(function() {
			for ( var i = nameSpaces.length - 1; i >= 0; i--) {
				self.collection(nameSpaces[i], callBacks[i])
			}
		})

	}
};
Mongo.prototype.open = function(callBack) {
	var self = this;
	this.client.open(function(err, client) {
		self.isOpen = true;
		callBack(err, client)
	})
}
Mongo.prototype.close = function() {
	this.client.close()
	this.isOpen = false;
}

Mongo.prototype.collection = function(nameSpace, callBack) {
	if (this.isOpen) {

		return this.client.collection(nameSpace, callBack);
	}
	return callBack('Client is not open.')
}
